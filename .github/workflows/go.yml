name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Check out code
        uses: actions/checkout@v4

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Test with coverage
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          fail_ci_if_error: false

      - name: Check coverage threshold
        run: |
          COVERAGE=$(go tool cover -func=coverage.txt | grep total | awk '{print $3}' | sed 's/%//')
          echo "Current coverage: ${COVERAGE}%"
          if (( $(echo "$COVERAGE < 85" | bc -l) )); then
            echo "Coverage ${COVERAGE}% is below required 85%"
            exit 1
          fi

      - name: Check for benchmark baseline
        id: baseline-check
        run: |
          if [ -f "benchmark.baseline" ]; then
            echo "baseline-exists=true" >> $GITHUB_OUTPUT
            echo "Benchmark baseline found"
          else
            echo "baseline-exists=false" >> $GITHUB_OUTPUT
            echo "No benchmark baseline found, skipping regression check"
          fi

      - name: Compare benchmarks for regressions
        if: steps.baseline-check.outputs.baseline-exists == 'true'
        run: |
          make bench-compare
